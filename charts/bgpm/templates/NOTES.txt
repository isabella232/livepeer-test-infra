{{- if .Values.installExporter -}}
The monitors will need to use the service account created by this release. To get
the token for this service account you can run the following:

```
# get token for services account
token=$(kubectl get sa -n {{ .Release.Namespace }} {{ .Values.serviceAccount }} -o=jsonpath '{.secrets[0].name}' -r)
kubectl describe secret -n {{ .Release.Namespace }} $token
```

Use the above token to create add a user to the kubeconfig used to access the
monitored cluster.

Replace the following:
- cluster-ca-data
- cluster-api
- service-account-token

```
# add the token to kubeconfig for monitors
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: <cluster-ca-data>
    server: <cluster-api>
  name: default
contexts:
- context:
    cluster: default
    user: bgpm
  name: default
users:
- name: bgpm
  user:
    token: <service-account-token>
current-context: default
```

{{- end -}}

# kubeconfigs for the monitors can be added with commands like:
```
kubectl create secret generic {{ .Values.name }}-<cluster-name> \
  --from-file=config=./path/to/service-account/kubeconfig \
```
